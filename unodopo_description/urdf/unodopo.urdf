<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from unodopo.urdf.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="UnoDopo">
  <!-- Measurements -->
  <!-- colors -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="invisible">
    <color rgba="0.0 0.0 0.0 0.0"/>
  </material>
  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="hokuyo_laser_scanner_material">
    <color rgba="1 0.643137 0.0313725 1.0"/>
  </material>
  <!-- This block provides the simulator (Gazebo) with information on a few additional
        physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
  <gazebo reference="right_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- This block provides the simulator (Gazebo) with information on a few additional
        physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
  <gazebo reference="left_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="front_caster_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- should contain a LINK name -->
  <gazebo reference="back_caster_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- Gazebo plugin for ROS Control -->
  <!-- <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
      </plugin>
    </gazebo> -->
  <!-- diff drive plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="uno_dopo_diff_driver">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.153</wheelSeparation>
      <wheelDiameter>0.21</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="joint_state_publisher">
      <jointName>front_caster_joint, back_caster_joint</jointName>
    </plugin>
  </gazebo>
  <!-- laser scan plugin -->
  <gazebo reference="laser_scan_link">
    <sensor name="front_sick_lidar_sensor" type="ray">
      <pose>0.0 0.3 0.2 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>24</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1080</samples>
            <resolution>0.25</resolution>
            <min_angle>-2.356</min_angle>
            <max_angle>2.356</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>10</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_front_hokuyo_controller">
        <topicName>/scan</topicName>
        <frameName>laser_scan_link</frameName>
      </plugin>
    </sensor>
    <material>
        Gazebo/Orange
    </material>
  </gazebo>
  <!--
    <link name="root">
    </link> -->
  <!-- base_link -->
  <link name="base_link">
    <visual>
      <material name="grey"/>
      <origin rpy="0 0 1.57" xyz=" 0.0 0.0 0.0"/>
      <geometry>
        <!-- <box size="${base_width}  ${base_length} ${base_height}"/> -->
        <mesh filename="package://unodopo_description/meshes/UnoDopoBase.obj" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.15354083333333332" iyz="0.0" izz="0.3825541666666666"/>
      <mass value="10"/>
    </inertial>
  </link>
  <!-- <joint name="root" type="fixed">
        <parent link="root"/>
        <child link="base_link"/>
    </joint> -->
  <!-- main wheel link -->
  <link name="right_wheel">
    <collision>
      <geometry>
        <cylinder length="0.052" radius="0.105"/>
      </geometry>
    </collision>
    <visual>
      <!-- <origin rpy="${1.57} 0 0" /> -->
      <material name="black"/>
      <geometry>
        <cylinder length="0.052" radius="0.105"/>
        <!-- <mesh filename="package://urdf_tutorial/meshes/UnoDopoWheel.obj" scale="${1.0} ${1.0} ${1.0}"/> -->
      </geometry>
    </visual>
    <inertial>
      <inertia ixx="0.002981583333333333" ixy="0.0" ixz="0.1" iyy="0.002981583333333333" iyz="0.0" izz="0.005512499999999999"/>
      <mass value="1.0"/>
    </inertial>
  </link>
  <!-- TODO: Create intermediary link so axis are in the right orientation for turning -->
  <!-- intermediary link -->
  <link name="right_intermediary_link">
    <visual>
      <material name="invisible"/>
      <geometry>
        <cylinder length="0.026" radius="0.0525"/>
        <!-- <mesh filename="package://urdf_tutorial/meshes/UnoDopoWheel.obj" scale="${1.0} ${1.0} ${1.0}"/> -->
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <!-- intermediary joint -->
  <joint name="right_intermediary_joint" type="fixed">
    <parent link="base_link"/>
    <child link="right_intermediary_link"/>
    <origin rpy="0 -1.57 0" xyz="0.153 0 0.068"/>
  </joint>
  <!-- main wheel joint -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="right_intermediary_link"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 1.57" xyz="0 0 0"/>
    <axis xyz="0.0 0.0 1.0"/>
  </joint>
  <!-- This block connects the wheel joint to an actuator (motor), which informs both
        simulation and visualization of the robot -->
  <transmission name="right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!-- main wheel link -->
  <link name="left_wheel">
    <collision>
      <geometry>
        <cylinder length="0.052" radius="0.105"/>
      </geometry>
    </collision>
    <visual>
      <!-- <origin rpy="${1.57} 0 0" /> -->
      <material name="black"/>
      <geometry>
        <cylinder length="0.052" radius="0.105"/>
        <!-- <mesh filename="package://urdf_tutorial/meshes/UnoDopoWheel.obj" scale="${1.0} ${1.0} ${1.0}"/> -->
      </geometry>
    </visual>
    <inertial>
      <inertia ixx="0.002981583333333333" ixy="0.0" ixz="0.1" iyy="0.002981583333333333" iyz="0.0" izz="0.005512499999999999"/>
      <mass value="1.0"/>
    </inertial>
  </link>
  <!-- TODO: Create intermediary link so axis are in the right orientation for turning -->
  <!-- intermediary link -->
  <link name="left_intermediary_link">
    <visual>
      <material name="invisible"/>
      <geometry>
        <cylinder length="0.026" radius="0.0525"/>
        <!-- <mesh filename="package://urdf_tutorial/meshes/UnoDopoWheel.obj" scale="${1.0} ${1.0} ${1.0}"/> -->
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <!-- intermediary joint -->
  <joint name="left_intermediary_joint" type="fixed">
    <parent link="base_link"/>
    <child link="left_intermediary_link"/>
    <origin rpy="0 -1.57 0" xyz="-0.153 0 0.068"/>
  </joint>
  <!-- main wheel joint -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="left_intermediary_link"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 1.57" xyz="0 0 0"/>
    <axis xyz="0.0 0.0 1.0"/>
  </joint>
  <!-- This block connects the wheel joint to an actuator (motor), which informs both
        simulation and visualization of the robot -->
  <transmission name="left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!-- caster wheels -->
  <link name="front_caster_wheel">
    <visual>
      <material name="black"/>
      <geometry>
        <cylinder length="0.042" radius="0.037"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.042" radius="0.037"/>
      </geometry>
    </collision>
    <inertial>
      <inertia ixx="0.00024462499999999994" ixy="0.0" ixz="0.0" iyy="0.00024462499999999994" iyz="0.0" izz="0.00034224999999999994"/>
      <mass value="1.0"/>
    </inertial>
  </link>
  <joint name="front_caster_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_caster_wheel"/>
    <origin rpy="0 1.57 0" xyz="0 0.1625 0.0"/>
    <axis xyz="0.0 0.0 1.0"/>
  </joint>
  <link name="back_caster_wheel">
    <visual>
      <material name="black"/>
      <geometry>
        <cylinder length="0.042" radius="0.037"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.042" radius="0.037"/>
      </geometry>
    </collision>
    <inertial>
      <inertia ixx="0.00024462499999999994" ixy="0.0" ixz="0.0" iyy="0.00024462499999999994" iyz="0.0" izz="0.00034224999999999994"/>
      <mass value="1.0"/>
    </inertial>
  </link>
  <joint name="back_caster_joint" type="continuous">
    <parent link="base_link"/>
    <child link="back_caster_wheel"/>
    <origin rpy="0 1.57 0" xyz="0 -0.1625 0.0"/>
    <axis xyz="0.0 0.0 1.0"/>
  </joint>
  <!-- lidar link -->
  <link name="laser_scan_link">
    <visual>
      <material name="hokuyo_laser_scanner_material"/>
      <geometry>
        <mesh filename="package://unodopo_description/meshes/hokuyo_laser_scanner.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://unodopo_description/meshes/hokuyo_laser_scanner.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="laser_scan_joint" type="fixed">
    <origin rpy="0.0 0.0 1.57" xyz="0.0 0.3 0.2"/>
    <parent link="base_link"/>
    <child link="laser_scan_link"/>
  </joint>
</robot>

